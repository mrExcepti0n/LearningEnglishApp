@using  LearningEnglishWeb.ViewModels.Training.CollectWord
@using  LearningEnglishWeb.ViewModels.Training.Abstractions
@model TrainingViewModel<CollectWordQuestionViewModel>


@{
    ViewData["Title"] = "Index";
}


<div class="trainingArea container shadow-lg p-5 mb-5 bg-white rounded" data-isreverse="@Model.IsReverse">
    <input id="trainingId" type="hidden" value="@Model.TrainingId" />
    @await Html.PartialAsync("CollectWordTrainingQuestion", @Model.CurrentQuestion)
</div>


@section Scripts{

    <script type="module">
        import { TrainingBase } from "../js/training.js";

        (function () {

            let isReverse = document.querySelector('.trainingArea').dataset['isreverse'] == "True";
            let trainingId = document.querySelector('#trainingId').value;
            let training = new TrainingBase(trainingId, isReverse);

            $(document).on("click", '.questionArea button.letter', function (evt) {
                this.classList.add('btn-warning');
                this.classList.remove('btn-info');
                document.querySelector(".answerArea").appendChild(this);
                if (allLettersIsCollect()) {

                    training.checkAnswer('@Url.Action("CheckAnswer")', getAnswer());
                }
            });

            $(document).on("click", '.answerArea button.letter', function (evt) {
                this.classList.add('btn-info');
                this.classList.remove('btn-warning');
                document.querySelector(".questionArea").appendChild(this);
            });

            function getAnswer() {
                let answer = '';
                document.querySelectorAll('.answerArea button.letter').forEach(el => {
                    answer += el.innerText;
                });
                return answer;
            }
            function allLettersIsCollect() {
                return document.querySelector(".questionArea").children.length === 0;
            }
        })();

    </script>
}
